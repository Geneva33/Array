class Solution {
    public List<Boolean> kidsWithCandies(int[] candies, int extraCandies) {
        List<Boolean> result = new ArrayList<>(candies.length);
        int max = 0;
       for  (int num_candies : candies) 
       {
           if (max < num_candies)
           {
               max = num_candies;
           }
       }
        for (int num_candies : candies)
        {
            if (num_candies + extraCandies < max)
            {
                result.add(false);
            }
            else
            {
               result.add(true); 
            }
        }
        return result;        
}
}



class Solution {
    public List<Boolean> kidsWithCandies(int[] candies, int extraCandies) {
        List<Boolean> ans = new ArrayList<>(candies.length);
        int max = 0;
        for (int i = 0; i < candies.length; i++)
        {
           max = Math.max (candies[i] , max);
        }
        for (int i = 0; i < candies.length; i++)
        {
            ans.add( candies[i] + extraCandies >= max);
        }
        return ans;
}
}


class Solution {
    public List<Boolean> kidsWithCandies(int[] candies, int extraCandies) {
        List<Boolean> ans = new ArrayList<>(candies.length);
        int max = 0;
        for (int candy :candies)
        {
           max = Math.max (candy, max);
        }
        for (int candy: candies)
        {
            ans.add( candy + extraCandies >= max);
        }
        return ans;
}
}
